.menu {

	// .menu__icon
	&__icon {}

	// .menu__body
	&__body {
		padding-block-start: toRem(30);
		padding-block-end: toRem(5);

		@media (max-width:$pc) {
			padding-block-start: toRem(20);
		}

		@media (max-width: $mobile) {
			position: fixed;
			width: 100%;
			height: 100%;
			left: -100%;
			top: 0;
			overflow: auto;
			padding: toRem(84) toRem(15) toRem(15) toRem(30);
			background-color: $whiteColor;
			transition: left 0.8s;
			z-index: 2;


			&::before {
				content: "";
				position: fixed;
				width: 100%;
				height: toRem(70);
				left: -100%;
				top: 0;
				transition: left 0.3s;
				z-index: 2;
				background-color: #ccced0;
			}

			.menu-open & {
				left: 0;

				&::before {
					left: 0;
				}
			}
		}
	}

	// .menu__list
	&__list {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: space-between;
		column-gap: toRem(57);
		row-gap: toRem(20);

		@media (max-width: $mobile) {
			flex-direction: column;
			row-gap: toRem(25);
			align-items: flex-start;
		}
	}

	// .menu__item
	&__item {
		flex-basis: auto;
		flex-shrink: 0;

		@media (any-hover: hover) {
			&:hover {
				.menu__link {
					color: $primaryColor;
				}
			}
		}
	}

	// .menu__link
	&__link {
		line-height: 1.5;
		/* 24/16 */
		text-transform: capitalize;
		transition: all 0.4s;

		@media (max-width: $mobile) {
			font-size: toRem(28);
			line-height: normal;
		}
	}
}

//Burger Icon
.icon-menu {
	display: none;

	@media (max-width: $mobile) {
		display: block;
		position: relative;
		width: toRem(30);
		height: toRem(18);
		z-index: 5;

		@media (any-hover: none) {
			cursor: default;
		}

		span,
		&::before,
		&::after {
			content: "";
			transition: all 0.3s ease 0s;
			right: 0;
			position: absolute;
			width: 100%;
			height: toRem(2);
			background-color: #000;
		}

		&::before {
			top: 0;
		}

		&::after {
			bottom: 0;
		}

		span {
			top: calc(50% - toRem(1));
		}

		.menu-open & {
			span {
				width: 0;
			}

			&::before,
			&::after {}

			&::before {
				top: calc(50% - toRem(1));
				transform: rotate(-45deg);
			}

			&::after {
				bottom: calc(50% - toRem(1));
				transform: rotate(45deg);
			}
		}
	}
}